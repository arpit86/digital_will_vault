<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    					http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-3.2.xsd 
    					http://www.springframework.org/schema/mvc
    					http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    					http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<mvc:annotation-driven/>
	<context:component-scan base-package="com.csus.vault.web.controllers" />
	<context:component-scan base-package="com.csus.vault.web.service" />
	<context:component-scan base-package="com.csus.vault.web.dao" />
	<context:component-scan base-package="com.csus.vault.web.model" />
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="100000" />
	</beans:bean>
    
    <!-- Simple implementation of the standard JDBC DataSource interface,
        configuring the plain old JDBC DriverManager via bean properties -->
   	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
      	<property name="url" value="jdbc:mysql://localhost:3306/digitalVaultdb" />
      	<property name="username" value="shweta" />
      	<property name="password" value="Shweta1601" />
   	</beans:bean>
	
	<!-- This produces a container-managed EntityManagerFactory -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      	<property name="dataSource" ref="dataSource" />
      	<property name="packagesToScan" value="com.csus.vault.web.model" />
      	<property name="jpaVendorAdapter">
         	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      	</property>
      	<property name="jpaProperties">
         	<props>
            	<prop key="hibernate.hbm2ddl.auto">update</prop>
            	<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
         	</props>
      	</property>
   	</beans:bean>
   	
   	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      	<property name="entityManagerFactory" ref="entityManagerFactory" />
   	</beans:bean>
    <tx:annotation-driven />	
</beans>